// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectHub.Infrastructure.Persistence;

#nullable disable

namespace ProjectHub.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("ProjectHub.Domain.Entities.Columns", b =>
                {
                    b.Property<int>("Column_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data_type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Is_nullable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Is_primary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Table_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Column_id");

                    b.HasIndex("Table_id");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Projects", b =>
                {
                    b.Property<int>("Project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("User_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Project_id");

                    b.HasIndex("User_id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Rows", b =>
                {
                    b.Property<int>("Row_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Table_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Row_id");

                    b.HasIndex("Table_id");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Tables", b =>
                {
                    b.Property<int>("Table_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Project_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Table_id");

                    b.HasIndex("Project_id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Users", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("User_id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Columns", b =>
                {
                    b.HasOne("ProjectHub.Domain.Entities.Tables", "Tables")
                        .WithMany("Columns")
                        .HasForeignKey("Table_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Projects", b =>
                {
                    b.HasOne("ProjectHub.Domain.Entities.Users", "Users")
                        .WithMany("Projects")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Rows", b =>
                {
                    b.HasOne("ProjectHub.Domain.Entities.Tables", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("Table_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Tables", b =>
                {
                    b.HasOne("ProjectHub.Domain.Entities.Projects", "Projects")
                        .WithMany("Tables")
                        .HasForeignKey("Project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Projects", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Tables", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ProjectHub.Domain.Entities.Users", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
